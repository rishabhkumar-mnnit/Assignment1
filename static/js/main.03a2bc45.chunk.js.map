{"version":3,"sources":["redux/postListType.js","redux/postListReducer.js","redux/postType.js","redux/postReducer.js","redux/commentType.js","redux/commentReducer.js","redux/rootReducer.js","redux/store.js","components/header/Header.js","redux/postListAction.js","redux/postAction.js","redux/commentAction.js","components/postList/PostList.js","components/comments/Comments.js","components/postDetails/PostDetails.js","App.js","index.js"],"names":["FETCH_POSTLIST_REQUEST","FETCH_POSTLIST_SUCCESS","FETCH_POSTLIST_ERROR","intitialState","loading","postList","error","postListReducer","state","action","type","payload","FETCH_POST_REQUEST","FETCH_POST_SUCCESS","FETCH_POST_ERROR","post","postReducer","FETCH_COMMENT_REQUEST","FETCH_COMMENT_SUCCESS","FETCH_COMMENT_ERROR","postComments","commentReducer","rootReducer","combineReducers","store","createStore","applyMiddleware","logger","thunk","Header","Container","Navbar","bg","Brand","to","Toggle","Collapse","className","Nav","Link","as","fetchPostListSuccess","fetchPostList","dispatch","axios","get","then","response","data","catch","errorMsg","message","fetchPost","pageID","fetchPostError","fetchComment","fetchCommentError","connect","postListData","useEffect","console","log","useState","searchTerm","setSearchTerm","placeholder","onChange","e","target","value","filter","val","title","toLowerCase","includes","map","index","id","Card","Body","body","props","showComments","name","postData","useParams","setShowComments","Button","variant","onClick","App","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.03a2bc45.chunk.js","sourcesContent":["export const FETCH_POSTLIST_REQUEST = 'FETCH_POSTLIST_REQUEST';\r\nexport const FETCH_POSTLIST_SUCCESS = 'FETCH_POSTLIST_SUCCESS';\r\nexport const FETCH_POSTLIST_ERROR = 'FETCH_POSTLIST_ERROR';","import { FETCH_POSTLIST_ERROR, FETCH_POSTLIST_SUCCESS, FETCH_POSTLIST_REQUEST } from './postListType';\r\n\r\nconst intitialState = {\r\n    loading: false,\r\n    postList: [],\r\n    error: ''\r\n}\r\n\r\nconst postListReducer = (state = intitialState, action) => {\r\n    switch (action.type) {\r\n        case FETCH_POSTLIST_REQUEST: return {\r\n            ...state,\r\n            loading: true\r\n        }\r\n        case FETCH_POSTLIST_SUCCESS: return {\r\n            ...state,\r\n            loading: false,\r\n            postList: action.payload,\r\n            error: ''\r\n        }\r\n        case FETCH_POSTLIST_ERROR: return {\r\n            ...state,\r\n            loading: false,\r\n            postList: [],\r\n            error: action.payload\r\n        }\r\n        default: return state;\r\n    }\r\n}\r\n\r\n\r\nexport default postListReducer;","export const FETCH_POST_REQUEST = 'FETCH_POST_REQUEST';\r\nexport const FETCH_POST_SUCCESS = 'FETCH_POST_SUCCESS';\r\nexport const FETCH_POST_ERROR = 'FETCH_POST_ERROR';","import { FETCH_POST_ERROR, FETCH_POST_SUCCESS, FETCH_POST_REQUEST } from './postType';\r\n\r\nconst intitialState = {\r\n    loading: false,\r\n    post: [],\r\n    error: ''\r\n}\r\n\r\nconst postReducer = (state = intitialState, action) => {\r\n    switch (action.type) {\r\n        case FETCH_POST_REQUEST: return {\r\n            ...state,\r\n            loading: true\r\n        }\r\n        case FETCH_POST_SUCCESS: return {\r\n            ...state,\r\n            loading: false,\r\n            post: action.payload,\r\n            error: ''\r\n        }\r\n        case FETCH_POST_ERROR: return {\r\n            ...state,\r\n            loading: false,\r\n            post: [],\r\n            error: action.payload\r\n        }\r\n        default: return state;\r\n    }\r\n}\r\n\r\n\r\nexport default postReducer;","export const FETCH_COMMENT_REQUEST = 'FETCH_COMMENT_REQUEST';\r\nexport const FETCH_COMMENT_SUCCESS = 'FETCH_COMMENT_SUCCESS';\r\nexport const FETCH_COMMENT_ERROR = 'FETCH_COMMENT_ERROR';","import { FETCH_COMMENT_ERROR, FETCH_COMMENT_SUCCESS, FETCH_COMMENT_REQUEST } from './commentType';\r\n\r\nconst intitialState = {\r\n    loading: false,\r\n    postComments: [],\r\n    error: ''\r\n}\r\n\r\nconst commentReducer = (state = intitialState, action) => {\r\n    switch (action.type) {\r\n        case FETCH_COMMENT_REQUEST: return {\r\n            ...state,\r\n            loading: true\r\n        }\r\n        case FETCH_COMMENT_SUCCESS: return {\r\n            ...state,\r\n            loading: false,\r\n            postComments: action.payload,\r\n            error: ''\r\n        }\r\n        case FETCH_COMMENT_ERROR: return {\r\n            ...state,\r\n            loading: false,\r\n            postComments: [],\r\n            error: action.payload\r\n        }\r\n        default: return state;\r\n    }\r\n}\r\n\r\n\r\nexport default commentReducer;","import { combineReducers } from 'redux';\r\nimport postListReducer from './postListReducer';\r\nimport postReducer from './postReducer';\r\nimport commentReducer from './commentReducer';\r\nconst rootReducer = combineReducers({\r\n    postList: postListReducer,\r\n    post: postReducer,\r\n    postComments: commentReducer,\r\n})\r\n\r\nexport default rootReducer;","import { createStore, applyMiddleware } from 'redux';\r\nimport rootReducer from './rootReducer';\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(logger, thunk))\r\n\r\nexport default store;","import React from 'react'\r\nimport { Container, Navbar, Nav } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nfunction Header() {\r\n    return (\r\n        <Container>\r\n            <Navbar bg=\"light\">\r\n                <Container>\r\n                    <Navbar.Brand to=\"/posts\">BlogPost</Navbar.Brand>\r\n                    <Navbar.Toggle />\r\n                    <Navbar.Collapse className=\"justify-content-end\">\r\n                        <Nav>\r\n                            <Nav.Link as={Link} to=\"/posts\">Home</Nav.Link>\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Container>\r\n            </Navbar>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import { FETCH_POSTLIST_REQUEST, FETCH_POSTLIST_ERROR, FETCH_POSTLIST_SUCCESS } from './postListType';\r\nimport axios from 'axios';\r\n\r\n\r\nexport const fetchPostListRequest = () => {\r\n    return {\r\n        type: FETCH_POSTLIST_REQUEST\r\n    }\r\n}\r\nexport const fetchPostListSuccess = (postList) => {\r\n    return {\r\n        type: FETCH_POSTLIST_SUCCESS,\r\n        payload: postList\r\n    }\r\n}\r\nexport const fetchPostListError = (error) => {\r\n    return {\r\n        type: FETCH_POSTLIST_ERROR,\r\n        payload: error\r\n    }\r\n}\r\n\r\nexport const fetchPostList = () => {\r\n    return (dispatch) => {\r\n        dispatch(fetchPostListRequest())\r\n        axios.get(\"https://jsonplaceholder.typicode.com/posts/\")\r\n            .then(response => {\r\n                const data = response.data;\r\n                dispatch(fetchPostListSuccess(data))\r\n            })\r\n            .catch(error => {\r\n                const errorMsg = error.message;\r\n                dispatch(fetchPostListSuccess(errorMsg))\r\n            })\r\n    }\r\n}","import { FETCH_POST_REQUEST, FETCH_POST_ERROR, FETCH_POST_SUCCESS } from './postType';\r\nimport axios from 'axios';\r\n\r\n\r\nexport const fetchPostRequest = () => {\r\n    return {\r\n        type: FETCH_POST_REQUEST\r\n    }\r\n}\r\nexport const fetchPostSuccess = (post) => {\r\n    return {\r\n        type: FETCH_POST_SUCCESS,\r\n        payload: post\r\n    }\r\n}\r\nexport const fetchPostError = (error) => {\r\n    return {\r\n        type: FETCH_POST_ERROR,\r\n        payload: error\r\n    }\r\n}\r\n\r\nexport const fetchPost = (pageID) => {\r\n    return (dispatch) => {\r\n        dispatch(fetchPostRequest())\r\n        axios.get(`https://jsonplaceholder.typicode.com/posts/${pageID}`)\r\n            .then(response => {\r\n                const data = response.data;\r\n                dispatch(fetchPostSuccess(data))\r\n            })\r\n            .catch(error => {\r\n                const errorMsg = error.message;\r\n                dispatch(fetchPostError(errorMsg))\r\n            })\r\n    }\r\n}","import { FETCH_COMMENT_REQUEST, FETCH_COMMENT_ERROR, FETCH_COMMENT_SUCCESS } from './commentType';\r\nimport axios from 'axios';\r\n\r\n\r\nexport const fetchCommentRequest = () => {\r\n    return {\r\n        type: FETCH_COMMENT_REQUEST\r\n    }\r\n}\r\nexport const fetchCommentSuccess = (postComments) => {\r\n    return {\r\n        type: FETCH_COMMENT_SUCCESS,\r\n        payload: postComments\r\n    }\r\n}\r\nexport const fetchCommentError = (error) => {\r\n    return {\r\n        type: FETCH_COMMENT_ERROR,\r\n        payload: error\r\n    }\r\n}\r\n\r\nexport const fetchComment = (pageID) => {\r\n    return (dispatch) => {\r\n        dispatch(fetchCommentRequest())\r\n        axios.get(`https://jsonplaceholder.typicode.com/posts/${pageID}/comments`)\r\n            .then(response => {\r\n                const data = response.data;\r\n                dispatch(fetchCommentSuccess(data))\r\n            })\r\n            .catch(error => {\r\n                const errorMsg = error.message;\r\n                dispatch(fetchCommentError(errorMsg))\r\n            })\r\n    }\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchPostList } from '../../redux';\r\nimport { Card, Container } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport '../postList/postList.css';\r\n\r\n\r\nfunction PostList({ postListData, fetchPostList }) {\r\n    useEffect(() => {\r\n        fetchPostList()\r\n    }, [])\r\n    console.log(postListData.postList);\r\n    const { postList, error, loading } = postListData;\r\n    const [searchTerm, setSearchTerm] = useState(\"\");\r\n    return (\r\n        <Container>\r\n            <div className=\"search_box_container\">\r\n                <input type=\"text\" className=\"search_box\" placeholder=\"Search...\" onChange={(e) => setSearchTerm(e.target.value)} />\r\n            </div>\r\n            <div>\r\n                {\r\n                    (loading) ? (<h5>Loading...</h5>) :(error) ? (<h5>error</h5>) :\r\n                    (postList.filter((val) => {\r\n                        if (searchTerm === \"\") {\r\n                            return val;\r\n                        } else if (val.title.toLowerCase().includes(searchTerm.toLowerCase())) {\r\n                            return val;\r\n                        }\r\n                    }).map((val, index) => {\r\n                        return (\r\n                            <div key={val.id} className=\"post_container\" >\r\n                                <Link to={`/posts/${val.id}`} className=\"link_style\" >\r\n                                    <Card>\r\n                                        <Card.Header ><strong>{val.title}</strong></Card.Header>\r\n                                        <Card.Body >\r\n                                            <span>{val.body}</span>\r\n                                        </Card.Body>\r\n                                    </Card>\r\n                                </Link>\r\n                            </div>\r\n                        )\r\n                    }))\r\n                }\r\n            </div>\r\n        </Container>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        postListData: state.postList\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        fetchPostList: () => dispatch(fetchPostList())\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PostList)\r\n","import React, { useEffect } from 'react';\r\nimport { Card } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\nimport { fetchComment } from '../../redux/commentAction';\r\nimport './comments.css';\r\n\r\nfunction Comments({ postComments, fetchComment, id, showComments }) {\r\n    console.log(postComments);\r\n    useEffect(() => {\r\n        fetchComment(id)\r\n    }, [showComments]);\r\n    return (\r\n        <Card>\r\n            <Card.Body>\r\n                <div>\r\n                    {\r\n                        (postComments.loading) ? (<h5>Loading Comments...</h5>) :\r\n                            (postComments.error) ? (<h5>{postComments.error}</h5>) :\r\n                                (\r\n                                    postComments.postComments.map((val, index) => {\r\n                                        return (\r\n                                            <div key={val.id}>\r\n                                                <div className=\"comment_section\">\r\n                                                    <div className=\"thumbnail_container\">\r\n                                                        <div className=\"thumbnail\"></div>\r\n                                                    </div>\r\n                                                    <div className=\"comment_container\">\r\n                                                        <div>\r\n                                                            <span><strong>{val.name} </strong></span>\r\n                                                        </div>\r\n                                                        <div>\r\n                                                            <p>Username{' '}{val.body} </p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        )\r\n                                    })\r\n                                )\r\n                    }\r\n                </div>\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (props) => {\r\n    return {\r\n        postComments: props.postComments\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        fetchComment: (id) => dispatch(fetchComment(id))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Comments)\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useParams } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { fetchPost } from '../../redux/postAction';\r\nimport { Button, Card } from 'react-bootstrap';\r\nimport { FaRegComments } from 'react-icons/fa';\r\nimport '../postDetails/postDetails.css';\r\nimport Comments from '../comments/Comments';\r\n\r\n\r\nfunction PostDetails({ fetchPost, postData }) {\r\n    console.log(postData);\r\n    const { id } = useParams();\r\n    useEffect(() => {\r\n        fetchPost(id);\r\n    }, [])\r\n\r\n\r\n    const { post, error, loading } = postData;\r\n\r\n    const [showComments, setShowComments] = useState(false)\r\n\r\n    const showCommentsHandler = () => {\r\n        setShowComments(!showComments)\r\n    }\r\n\r\n    return (\r\n        <div className=\"post_details_container\">\r\n            {\r\n                loading ? (<h5>Loading...</h5>) : (error) ? (<h5>{error}</h5>) : (\r\n                    <Card >\r\n                        <Card.Header>{post.title}</Card.Header>\r\n                        <Card.Body >\r\n                            <Card>\r\n                                <Card.Body>\r\n                                    {post.body}\r\n                                </Card.Body>\r\n                            </Card>\r\n                            <hr />\r\n                            <Button variant=\"light\" onClick={showCommentsHandler}>\r\n                                Show Comments <FaRegComments />\r\n                            </Button>\r\n                            {\r\n                                (showComments === true) ? (<Comments id={id} showComments={showComments} />) : (<span></span>)\r\n                            }\r\n                        </Card.Body>\r\n                    </Card>\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        postData: state.post\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        fetchPost: (id) => dispatch(fetchPost(id))\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PostDetails)\r\n","import { Container } from 'react-bootstrap';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport './App.css';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Header from './components/header/Header';\nimport PostList from './components/postList/PostList';\nimport PostDetails from './components/postDetails/PostDetails';\n\nfunction App() {\n  return (\n    <Router>\n      <Header />\n      <Provider store={store}>\n        <Container>\n          <Switch>\n            <Route exact path=\"/posts\">\n              <PostList />\n            </Route>\n            <Route path=\"/posts/:id\">\n              <PostDetails />\n            </Route>\n          </Switch>\n\n        </Container>\n      </Provider>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}